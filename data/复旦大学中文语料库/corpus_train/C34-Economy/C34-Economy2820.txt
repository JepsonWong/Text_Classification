【 文献号 】2-119
【原文出处】《财会研究》
【原刊地名】兰州
【原刊期号】199912
【分 类 号】F101
【分 类 名】财务与会计
【复印期号】200004
【 标  题 】会计决策支持系统开发方法研究
【 作  者 】李希富/田文淀
【 正  文 】
    当前，社会信息化问题已成为摆在世界各国面前的一个重大课题，这是触及社会经济生活所有领域的一场变革，各级各类会计信息系统的
建设和应用则是企业管理信息化的中心环节。
    事后核算、事中控制和事前决策是会计管理的三个基本组成部分，它们相互联系、相互补充，而事前决策是会计管理的最高形式。而无论
是AIPS阶段还是AMIS阶段，它们仅完成了例行的日常会计信息处理任务，只是计算机在管理中发挥作用的初级阶段。现在，会计决策支持系统
（AccountingDecision Support System,简称ADSS）已成为计算机应用领域中最引人注目的内容之一。近些年来国外计算机在企业管理中应用
的重点已由运算转向管理控制、计划和分析等高层管理决策和策略制定，并收到了良好的效果。而在国内，计算机在会计中的应用还仍停留于
核算领域，对ADSS还是一个相当薄弱的领域，无论从理论研究上，还是实践应用上来看都与西方发达国家存在很大的差距。为了缩小这一差距
，我们必须在借鉴和吸收西方在ADSS领域研究和应用方面的有益成果，学习其先进技术和方法的同时，提倡和鼓励跨学科的合作研究，并从我
国的国情出发，加快决策支持系统的研究、开发与应用。
    开发一个计算机应用系统是从分析用户的需求入手的，会计决策支持系统的研制也不例外。由于ADSS本身的性质和特点，决定了开发ADSS
需要突破原有AIPS或AMIS分析与设计方法的框框，建立适应于ADSS特点的系统分析和系统设计的方法论。
    一、传统系统开发方法的局限性
    从方法论的角度来看，传统的系统开发方法都是基于演绎法――即自顶向下法或归纳法――即由底向上法的系统分析原理。从它们应用于
系统研制的过程来看，一般需经过需求分析、系统设计、系统实现、系统交付使用及维护等几个紧密相关的阶段，因此，通常又将这些方法称
为生命周期法。传统的生命周期法常用于AMIS和其它一些大型软件的研制开发，也有人用于开发ADSS。生命周期法的优点是整个开发过程和步
骤清楚，每一阶段和步骤均有明确的成果，适用于一些问题领域比较稳定、结构性好、目标明确的系统，若ADSS的开发，则存在有几方面的局
限性：
    (1)前提的局限：传统的方法在开发一个系统时一般基于这样一个前提，用户的需求（包括信息需求、处理需求的目标设计等）可以在分析
阶段得到很好地定义，用户能清楚地知道并能表达出它们要做什么，是如何做的。而ADSS主要面对的是半结构化和非结构化的会计问题，这些
试图要解决的问题不能事先完全而清晰的定义，用户在开发的初始阶段很难明确地陈述问题、提出要求。因此，ADSS难以满足这一基本前提。
    (2)目标的局限：系统开发方法的目标是尽量降低开发费用、缩短开发周期，研制出最能满足用户需求的系统，而开发周期长、开发费用高
、维护困难是生命周期法的主要缺陷，ADSS的特点决定了对它的开发只能是一个反复迭代的过程，迅速而有效地建立一个初始系统支持所要做
的决策就显得尤为重要。
    (3)灵活性的局限：传统的方法强调系统生命周期各阶段的划分，每一阶段的目标和任务是唯一确定的。而在ADSS的研制过程中，问题本身
或用户对问题的理解可能会随时间而改变，并且会发生在生命周期的任何时刻。这种变化可能是由环境的变化或者决策者的能力提高引起的。
在ADSS的研制过程中，这种变化是经常的，而不象在AMIS中那样，需求定义或处理过程的变化被认为是一种例外情形。因此，生命周期法的这
种严格阶段划分难以适用于ADSS的研制。
    (4)技术的局限：ADSS是模型驱动的，是面向决策的，传统方法所提供的描述信息需求、定义处理的过程的工具难以用于刻划半结构化或非
结构化决策过程的方法及思路，就是在数据组织结构的设计上比一般的AMIS在技术上难度更高。
    综上所述，传统的系统开发方法难以用于ADSS场合，这就意味着我们必须找到一种适合于开发ADSS的方法。
    二、ADSS开发方法的特点
    到目前为止，已有许多研制ADSS的方法问世，如雏型法(Prototyping)、增长法(Increasing)、ROMC方法等等。这些方法各有侧重，但基本
思路是相同的，即决策者和系统研制者先在一个小的重要问题上达成一致意见，以快捷的方法设计和建造一个初始系统，支持所要做的决策；
经过短时间使用以后，对系统进行评价、修改和扩展，经过反复循环，使系统成为一个相对稳定的系统，并能对一组决策任务提供支持。这就
是说将典型的系统开发的主要阶段合并成一种反复迭代的过程。从一般方法论的角度来看，ADSS的研制方法具有以下几个特别。
    (1)交互设计
    ADSS研制方法强调分析与设计的动态性，随着决策问题、决策环境、决策者风格的变化，分析设计也要不断发展、演变、求精。交互设计
强调用户、系统和研制人员之间的相互作用。
    (2)用户的参与
    同AMIS的研制过程相比，ADSS更加强调用户的参与。在ADSS的开发过程中，用户不仅是研制任务的提出者、系统的需求定义和评价者、研
制过程的参与和系统的使用者（AMLS仅限于此），而且是ADSS的主要设计者和管理者。
    (3)适应决策者风格
    决策者希望能直接经历实践，亲自操作系统，因此，决策者的经验、知识、偏好等直接影响信息需求、模型构造、人机接口和输入输出设
计，因此，ADSS应该具备相当的灵活性以适应各种不同的决策者风格。
    (4)尽可能短的研制周期
    快速研制，尽早交付使用，尽快见效可使用户树立信心。研制周期过长，不仅会使用户失去耐心，而且时间一长，时过境迁、研制出来的
系统可能已不能适应变化了的环境。
    (5)以生成器为基础的积木式设计要满足快速多变的特点，就需要有一个较好的软件环境。DSS生成器(DSSG)正是支持快速、灵活研制DSS的
软件。目前，国外多数ADSS都是在DSS生成器上开发的，而交互式财务计划系统(IFPS)本身就是一种DSS生成器。
    (6)学习和创造对于半结构和非结构化的问题，决策者和研究者都需要学习，在学习中寻找新的更完善的解决问题的途径，因此，ADSS研制
方法注重决策者和研制者交互过程中的学习以及ADSS系统本身的辅助学习能力。
    三、ADSS开发的三个层次
    从系统开发的角度来看，ADSS具有三个不同的技术层次，应用层、生成器、工具层，它们面向的人员不同，所起的作用也不同。
    应用层属于最高层，它直接面向用户，可由ADSS工具构成，亦可以由生成器产生。ADSS生成器是用来研制ADSS的硬件和软件系统，它包括
数据管理、模型管理、知识管理和对话管理所需要的技术以及将它们有机地结合起来的接口。利用生成器，ADSS研制者可以根据决策者的要求
、环境和任务，迅速构造出来，从而大大缩短ADSS的研制周期，降低研制费用。工具层由一些可用来构成ADSS或生成器的硬件或软件单元。如
净现值计算程序，彩色图像工具，线性规则软件包，风险分析功能等。
    半结构化和非结构化的决策过程常常处于不断变化的环境之中，这就要求ADSS能对决策过程模型、参数、约束条件、内外部影响因素等及
时予以改变或扩充。从这一点来看，利用ADSS生成器开发ADSS比直接由ADSS工具来开发更能灵活的适应各种变化。
    四、ROMC方法
    根据以上分析，笔者认为，ROMC方法是开发ADSS比较理想的方法。ROMC方法首先是由Carison提出的，它的基本原理是：根据西蒙的决策过
程模型，尽管决策过程是非常复杂的，但决策过程中决策者从事的三个基本活动（情报、设计、选择）都是能够识别的。通过区分决策的基本
活动，可以了解决策者在这些活动中的行为，从而确定需要的支持。
    在使用ROMC方法时，需要对各种各样的决策过程和决策者的需要进行分析，以通过用ROMC方法减少决策支持的要求与系统能力之间的差别
。从用户的立场来看，ADSS的能力在于以下几个方面：
    (1)提供表达式以帮助决策者将问题概念化以便于处理和交流。
    (2)提供对这些表达式进行分析和运算的某些操作方法。
    (3)提供辅助记忆手段。
    (4)提供处理和使用整个系统的控制机构。
    ROMC方法正是建立在这四个方面的基础之上的，它主要从以下几点进行分析：①表达方式(Representation)：使问题概念化；②操作(Opr
ation)：对表达进行加工；③记忆辅助(Memory aid)：表达与加工的存储支持；④控制机制(Controlmachqnism)：控制、协调整个系统。
    ROMC方法正是这四个方面的缩写，在使用ROMC方法时，需要对各种各样的决策过程和决策者的需要进行分析，以求通过用ROMC方法减少决
策支持的要求与系统能力的差别。虽然决策过程和决策的需求因决策种类和决策者的不同而变化，但也存在一些共同特征：
    (1)对于半结构化的非结构化的决策问题，要决策者清楚地描述决策过程是困难的，决策者在做决策或在解决决策时一般运用某些概念化的
东西，例如图像、卡片、公式、模型等。针对于此，ROMC采取了过程独立的方法。所谓过程独立也就是它避免了对决策者的活动的描述限制于
按某一顺序进行。这基于数据流程图的传统系统分析方法有着本质和不同。
    (2)虽然决策过程是很难解释的，但西蒙的情报，设计和选择对决策活动的分类是很有用的。ROMC方法依赖表达式（而不仅仅是数据）作为
联系ADSS各部分的纽带，它是通过在表达式上的操作来支持决策过程的情报、设计和选择活动；各种存储又去支持表达式和操作，而控制则是
为了控制表达式、操作和存储。识别表达式以及关于表达式的操作比识别完整的决策过程要容易的多。
    (3)ROMC方法为分析和设计ADSS提供了框架，但并没有提供实现ADSS的具体技术。ROMC方法需要ADSS生成器的支持。
 
