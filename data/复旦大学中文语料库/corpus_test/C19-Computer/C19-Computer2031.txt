微型电脑应用
MICROCOMPUTER APPLICATIONS
2000　Vol.16　No.1　P.19-21



认证授权与通用信任管理系统
史金红　龙敏敏　白英彩
摘　要：本文提出可设计一个通用的信任管理系统。将一般系统安全中共有的部分如安全策略、安全证明书、信任委托等作为具体应用的安全需求提出来，用一标准的解释式语言实现此安全需求，信任管理系统解释执行并将结果返回。这样的安全信任管理系统可为众多的应用提供方便、灵活的服务。
关键词：信任管理　安全策略　安全　认证
Abstract：This paper proposes a design of general-purpose trust management systens. The common parts in them such as security policies, se curity credentials and deferring trust to third parties are to be separated as s ecurity requirement, implemented using a standard interpretive language, and exe cuted by the trust management system to return relevant results. Such a trust ma nagement system can provide convenient and flexible services in various applicat ions.
Keywords：trust management　security policy　security　aut hentication▲
一、前言
　　现有的计算机应用中，采用公钥加密技术来保护系统的安全已越来越普遍。公钥加密系统中，每个用户使用《公钥，私钥)对。用户自己保密私钥，将公钥公布给通信对象。围绕怎样发布公钥，带来了一些新的问题。首先，必须找到一个有效的方法来发布公钥；其次，由于公钥是公开的，有可能一个骗子拥有一个(公钥，私钥)对，而假称是另一用户的，然后以此用户的名义去行骗；为防止这类欺骗，需要找到一方法能确证公钥的所有者是真正的所有者，而且公钥确实是有效的。一般的方法是由可信任的第三方或者认证权威(Certification Authority)来提供公钥证明书［2］［5］。
　　公钥证明书是由可信任的第三方签名的特殊的报文，用于证明公钥及其所有者的合法性，一般包括以下一些关键部分：公钥本身，公钥所有者的ID，出证明者的数字签名和出证明者的ID等等。根据一定的安全策略，可认为拥有公钥证明书的用户是可信任的，可以与之安全通信。公钥证明书的出具是分布式的，便于灵活控制和扩大应用规模，这就要求信任关系是可以委托授权的。
　　上面这些安全服务中，有一些共同的特征，如采用一定的安全策略，使用安全证明书来证明身份，用信任关系来委托授权等等。所谓安全策略，是指在一定的安全领域内，必须接受和遵守的一组规则、义务、责任、权力等，如规定可信任谁、在什么条件下可委托信任等。在现有的应用中，这些共同特征都不同程度地融入了各种具体的应用中，但没有当作专门的问题来研究。我们认为有必要研究一个通用的安全服务框架，不依赖于任何具体的应用和服务，作为网络系统中一个通用的工具，可为任何应用提供安全服务。
二、现有的认证系统
　　1.PGP(Prety Good Privacy)系统［3］［4］
　　PGP是Internet上能安全收发电子邮件的软件包。在PGP中，一个用户产生一个(公钥，私钥)对来与它唯一的ID相联系。通常一个ID是如(名字，电子邮件地址)的形式。密钥存在密钥记录中，一个公开(或私有)的密钥记录包含一个ID，一个公开(或私有)密钥，以及该密钥被创建的时间戳。公钥保存在公钥环中，私钥保存在私钥环中，每个用户存贮和管理一对钥环。如果用户A有用户B的公钥记录的一份良好拷贝，也就是A有把握认为自从B产生它后没有被篡改过，A可以对这份拷贝签名并传送给C，这样A是把B介绍给C的介绍者。
　　每个用户必须告诉PGP系统哪些个体它将信任为介绍者，并且他/她必须用自己的私钥来认证介绍者的公钥记录。用户可以规定对其介绍者的信任程度，程度可分为：未各，不信任，基本信任，完全信任。每个用户将信任信息存贮到钥环上并告诉PGP给钥环上每个证明书赋一有效分数，仅使用分数足够高的证明书中的密钥。这个分数可由用户自己设定。这样通过介绍者，用户可以与其不认识的用户通信。钥环及信任程度允许每个用户以有限的形式设计自己的安全策略。
　　2.X.509
　　X.509是CCITT的一个基于公钥的认证框架，其目录服务可为各种应用提供公钥管理。在X.509中，若用户要想和另一用户通信，它必须找到该用户的公钥的值得信任的拷贝。X.509的证明书是签了名的记录，将用户的ID和公钥联系起来。X.509与PGP的最大区别在于它的信息的集中程度。因任何一个用户都可以对公钥签名并担任介绍者,X.509要求每个用户到官方的认证权威处去获得一个证明书。当用户创建一个(公钥，私钥)对，他将拥有密钥对，并将其他所需信息一起送到一个或多个CA处认证，将得到的证明书也登记在官方的目录服务器中。此后如果A想和B通信，他可以从目录服务中获得B的证明书。如果A和B属同一CA认证，目录服务器可以直接将B的证明书传给A，而A可以用他们公共的CA的公钥验证证明书的合法性。若A和B不是直接被同一CA所认证，则目录服务必须创建一条从A到B的认证路径［1］。路径表为CA1，cert1,CA2,cert2,…，CAn,certn,其中certi,是CAi+1的证明书，并且被CAi签名，certn是B的证明书。为了使用这条路径获得B的公钥，A必须知道CA1的公钥。X.509框架依靠这样一个假定：所有的CA组织成一个全局的认证授权树，而且所有有共同兴趣的用户的CA在此全局树中有一共同的祖先。
　　X.509和PGP对许多要求使用密钥的应用都是不充分的。在PGP系统中，没有官方的机制来创建获取和发布证明书。不论对任何特别的就用，用户必须自己处理信任及管理关系。这种非正规的介绍机制也许对个人通信是足够的，可是对商业应用来说就不够可靠了。X.509的认证框架中提出的全局认证树，其效率随安全提高而降低，它常迫使竞争的实体进入不合理的信任关系中(虽然可能是非直接的)，在商业应用中也是不够的。
三、通用的信任管理系统
　　从本质上说，公钥认证体系与各种具体应用是分开的，没必要放在一块。而上述两个系统以及目前绝大多数系统都没有很好地分开，导致结构臃肿。有必要将认证、授权、信任管理等分离出来单独管理，建立一个通用的信任管理系统。
　　1.系统目标
　　在这两个基于证明书的安全系统中，将身份标识联结到公钥上，允许服务的请求者直接证明他持有证明书授权他可以使用这些服务。这样具体应用必须自己处理信任管理问题，而我们希望具体应用不必处理信任管理，只需提供合法的公钥证明书、安全策略及申请的动作，由独立的信任管理系统来判断动作是否合法。因而要改进这些联结，将公钥联结到谓词，谓词描述了公钥所信任的、并愿意签名的动作。
　　我们可设计一个通用的信任管理系统，应基于以下几个原则：
　　①需要通用的安全描述语言：根据一般安全问题所共有的特性，设计一独立的、通用的安全描述语言，用来对安全需求编程。
　　②一致的机制：策略、证明书、信任关系都是用安全的通用安全描述语言书写的程序，通过为策略、证明书、信任关系提供公共的语言，使得网络应用可以以一种全面的、一致的、高度透明的方式处理安全问题。
　　③灵活性：即可支持大规模网络应用中的复杂信任关系，又使简单和标准的策略、证明书、信任关系能简洁和全面地表达，而且现有的系统如PGP和X.509系统的证明书只要很少的修改，就可以应用。
　　④本地控制：网络中的每一方都可以决定任何环境下是否接受第二方的凭证，或者是否可依赖第三方的证明书。通过本地控制信任关系，没必要知道一个全局的认证授权树。
　　⑤验证机制与安全策略分离：验证证明书的机制不依赖于证明书本身，也不依赖于使用这些机制的应用程序。这使得许多有不同策略需求的应用程序可以共享单一的证明书验证框架。
　　这种能表达安全证明书和策略而不要求具体应用管理个人身份标识和权限之间的映射，在系统中是非常方便的，尤其是包含匿名的安全请求的系统中。如在电子选举系统中，要求能为请求者建立一个注了册的选举者，而不允许知道请求者的个人标识。
　　2.实现方法
　　(1)安全描述语言
　　建立一个标准的安全描述语言，该语言用来描述策略、证明书、信任关系等。其实任何一个可被安全解释的语言都可用作此语言，如Java。各个具体应用则采用此语言对安全需求进行编程，不妨称为安全请求程序。具体应用将安全请求程序传给信任管理系统。信任管理系统中有此语言的解释器。解释执行安全请求程序，并将结果传回给具体应用程序。这种语言可以有比较强的表达能力而语言本身仍然很简单。
　　安全请求程序应包含一个本地策略声明的集合，一些证明书，一个查询，查询中包含一个字符串描述建议被信任的动作。根据证明书及查询的形式，信任管理系统可能返回一个简单的Yes/No回答，或者可接受该建议动作的附加的限制条件。信任管理系统可设计为一个应用程序，或作为一个服务“精灵”运行，它接收并处理来自具体应用的安全请求。
　　在简单的应用中，证明书的生成和注销可由具体应用程序来管理。更复杂的应用中可由一外部模块来管理，外部模块的行为(例如规定证明书的发布和注销的权威机构)将由安全请求程序中有关证明书的术语来规范。证明书上的签名验证可由外部代理来处理。
　　信任也应可以被委托，既然安全信息通常不是完全定义的、或不是可以本地获取的，经常需要依靠被信任的第三方来提供额外的安全信息。一个本地策略可委托被信任的第三方来为其他人发行证明书，它可限制可被信任的第三方的范围。这些第三方自己如果没有所有相关的安全信息，他们也可以委托信任关系。本地策略可为信任关系被委托的次数设定一个界限。
　　(2)简单实例
　　下面介绍一个简单的实现。
　　查询的形式如下：KeyString REQUEST ActionString.KeyString是一串公钥，本质上代表着用户。动作串是由具体应用决定的消息，描述了公钥请求的一个被信任的动作。动作串的语义是由产生和解释它的应用程序决定的。不是信任管理系统的一部分也不为其所知。动作串仅被发请求的应用程序所解释，可被授予各种各样的能力。如可签名电子邮件，声明来自某一特定用户；浏览收费主页；网上电子交易，等等。
　　由于信任管理系统并不知道什么是动作串，具体应用程序应该告诉它动作的名字，形式如下：
　　ACTION ActionName1,ActionName2,……ActionNamen
　　策略及安全证明书实际上是给公钥授权，用声明表示，其形式可以如下：
　　　Source ASSERTS AuthorityStruct WHERE Filter
　　其中Source代表声明的来源：可以是本地策略，用Policy表示；也可以是第三方签了名的声明。AuthorityStruct规定了此声明的应用对象是哪些公钥，可以简单是一串公钥，也可是由有一定关系的公钥组成的。Filter就是动作串必须满足的谓词。过滤器是与公钥相联系的。基于密钥持有者被信任可做哪些操作，过滤器接收或拒绝动作串中的动作。Filter的形式可为：PREDICATE=regexp:string,PREDICATE=regexp:string,……,PREDICATE=…。
　　安全语言可包括通用语言中的变量、赋值、运算、判断、分支控制等结构，此外不再多加说明。下面举一个实际例子。一家证券投资公司购买某种股票A的策略是：若A的价格达到2.0元，且至少两个职员签字购买，就可以购买该股票。相应的安全请求程序应包括以下一些内容。
　　ACTION BuyStockA
　　最高层的策略是安全认证权威(设Security-CA为它的公钥)允许以公司的名义创建证明书。
　　POLICY ASSERTS Security-CA WHERE PREDICATE=regexp:“公司：证券投资”
　　Security-CA就可以创建证明书，声明当股票A的价格大于等于20元时，任何两个职员签字就可以购买股票A。
　　Security-CA ASSERTS“至少2个Employekey”WHERE
　　　PREDICATE=regexp:“A的价格　≥20元”
　　EmployeKey为两个职员签名，认证他们的名字
　　　EmployeKey ASSERTS Zhangkey WHERE
　　　　PREDICATE=regexp:“签名者：张三”
　　　EmployeKey ASSERTS WangKey WHERE
　　　　PREDICATE=regexp:“签名者：五五”
当股票监视程序接受到如下形式的股票购买程序的请求时：
　　股票A的价格：21元
　　签名者：张三、王五
将检查数字签名，产生相应的动作串，询问信任管理系统该请求可否被执行：
　　｛ZhangKey,WangKey｝REQUEST
　　　“股票A的价格：21无
　　　　公　司：证券投资
　　　　签名者：张三、王五
　　　　动　作：BuyStockA”
四、结束语
　　通用的信任管理系统优点在于安全策略及安全证明书都可以用一通用的语言来描述，各种具体应用都可以实现自己或简单或复杂的安全系统而不用自己去管理。以一种自然的方式实现各部分的责任分离，应用程序制定安全策略、提供安全证明书、解释动作语义，信任管理系统验证动作是否合法。在这里权限没有与个人身份直接相连，权限存在于策略之中，权限是通过策略来动态联结用户的，这提供了权限修改的方便也更安全。当然，应用系统安全的关键还在于要提出正确的安全需求，制定正确的安全策略，动作串要准确地反映安全语义等等。
　　安全描述语言也是一个比较重要的一部分，要随着理论和实践的发展进一步完善。设计通用的信任管理系统，目前国际、国内的研究尚不多。有必要设计一种形式模型，用数学的方法、严格的方式探讨这种信任管理方式能力和限制，从而从理论上得到比较完善的解答。■
作者单位：史金红(同济大学计算机科学与工程系 上海 200030)
　　　　　龙敏敏(上海交通大学97033BA 上海 200030)
参考文献：
［1］Lourdos Lopez, Justo Carracedo Hierarchical Organization of Certifi cation Authorities for Security Environments. Proceedings 1997.Symposium on Netw ork and Distributed System Security. Feb 1997
［2］Wei-Bin Lee, Chin-Chen Chang Authenticity of Public Keys in Asymmetr ic Cryptosystems. Computer Communications,v.21 1998 p195-198
［3］William Stallings Pretty Good Privacy. Byte. July 1994,p193-196
［4］William Stallings The PGP Web of Trust. Byte, Feb 1995,P161-162 
［5］Santosh Chokhani, Toward a National Public Key Infrastructure. IEEE Communication Magazine.
收稿日期：1999-09-24
