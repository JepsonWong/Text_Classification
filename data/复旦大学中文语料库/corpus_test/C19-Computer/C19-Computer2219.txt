计算机应用研究
APPLICATION RESEARCH OF COMPUTERS
2000 Vol.17 No.3 P.17-18,82




一种基于ISAPI扩展的安全验证方法
陈晓苏　张涛　肖道举
摘　要：分析了HTTP基本验证、NT安全模型以及IIS的用户安全机制，讨论了它们在用户安全验证中存在的问题和改进的设想，并给出了一种基于ISAPI扩展的安全验证方法。
关键词：NT IIS 安全验证 ISAPI扩展
1　引言
　　由于企业管理的需要，越来越多的企业构建基于Windows NT的内联网(Intranet)，并建立自己的Web网站，以主页的形式发布企业信息。为了合理的管理和利用大量的已有信息，不少企业将Web与数据库管理系统相结合，开发开放性的Web应用系统，提供面向Web的交互式数据库访问平台。基于这种应用特征，如何保证系统的安全运行环境，如操作系统、Web服务器和数据库系统的安全等，就显得十分重要。
　　本文从分析HTTP基本验证机制入手，考察Windows NT与IIS的用户注册和身份验证的过程，讨论了它们在维护网络安全方面存在的缺陷，特别对于访问Windows NT网址的用户增多造成其安全验证性能迅速下降，以及IIS无法支持第三方安全数据库等方面问题进行了深入地剖析。为解决上述缺陷，给出了基于ISAPI扩展的安全验证方法，以代替IIS缺省的网络安全性检验。
2　HTTP规范的基本验证机制
2.1　HTTP的验证进程
　　HTTP标准协议中定义了一个简单、灵活、可扩展的Challenge/Response进程来验证用户的身份。在匿名用户请求受限的资源之前，用户一直保持匿名状态，直到匿名用户请求安全资源时，验证进程开始。服务器将产生一个标准的HTTP 401“Access denied”消息，响应远程浏览器，通知请求被拒绝。由于HTTP是无状态的协议，服务器不跟踪初始请求中所指定的资源，要求浏览器重新形成安全凭证并再次提交请求。在重新提交的请求中附加包含请求头部“Authorization”，其后包含已编码的凭证和用于编码凭证的验证方案的名字。验证请求提交后，服务器在请求中找到Authorization头部，并使用凭证记录来确定用户的身份。验证的结果可能是请求被拒绝，要求浏览器再次提交新的凭证(提交的次数根据浏览器而定)；可能提供的新凭证是合法的，服务器返回所请求资源。
2.2　HTTP的验证方案
　　验证方案是用于从浏览器传送安全凭证到服务器的机制。HTTP规范中验证方案通常有两种，即基本验证方案和NTLN方案。
　　(1)基本验证方案
　　该方案被大多数Internet服务器支持，实现跨网络传输用户名和口令的编码。服务器通过在响应头中包括如：WWW-Authenticate：Basic reaml=“localhost”的验证记录来表明它支持该验证方案。另外，基本验证方案请求中的授权记录包含有检查编码凭证的方案名字，如：Authorization：Basic c2rbWM6eHh4(用户验证记录的MIME Basic-64格式编码)。由于基本验证方案对传输的数据只是进行编码而未加密，因此基本验证方案只能是一种认定用户的方法，不能实现真正的网址安全保护。
　　(2)NTLN验证方案
　　该方案由IIS和Internet Explorer实现，完成从操作系统用户登录数据库中获取工作站注册凭证，以此作为服务器的安全凭证。该方案仅在NT或LAN Manager网络中使用。
3　Windows NT的安全模型与IIS的安全环境
　　在Windows NT中，验证实际上是WWW用户的NT登录进程。一个服务是任何登录用户独立运行的一个程序(一般为后台进程)。常见的服务包括：
　　(1)登录服务：处理Client登录请求，对用户进行认证。
　　(2)DNS Server：处理Internet域名解释。
　　(3)远程过程调用服务：处理Client RPC请求，并将它们映射到已注册的RPC Server上。
　　Windows NT的名字库是NT用户管理器中定义的一系列用户，每个记录中的用户名和口令用于Windows NT登录，以验证用户访问NT的身份。由于Windows NT的用户名和口令以一种易于解码的形式传递，因而从严格地意义上讲，NT用户身份验证也不能实现真正的网址安全保护。IIS系统中的安全通过使用标准Windows NT访问权限来管理。用户在服务器上检索资源的权利是通过检查Windows NT用户的访问权限来确定。
　　IIS认证Client请求有三种方法：匿名注册、基本验证、Windows NT询问/响应认证。匿名认证设置透明的用户名和密码，允许匿名用户访问一定的资源。当匿名用户请求其它网络资源时，Server启动后两种认证方式中的一种。根据对HTTP基本验证的分析，由于用户名和密码采用MIME Basic-64编码，以可见的明文传输，因而采用基本认证会对IIS的安全性带来潜在的危险。当IIS采用Windows NT询问/响应认证时，IIS从Windows NT的名字库中获取Client的注册凭证。但是必须看到，当大量的网络用户访问NT网站时，由于Windows NT本身的局限性，其安全验证性能会显著下降。
4　验证过滤器应解决的问题
　　从前面的分析中可以看出，Windows NT与IIS中的基本验证过程，存在以下问题：
　　(1)由于用户名和密码没有加密，因而用基于编码和解码用户名和口令的方法来验证网络用户的资源访问权限，验证本身并不能保证网址的安全。
　　(2)Windows NT域上的网址超过5,000用户时，NT中的安全管理器的安全验证性能会显著下降。
　　(3)对于一些实现了某种安全性的网址，如银行的在线帐户系统，如果网络服务器安全数据库与银行帐户数据库不一致，势必会给银行客户的身份验证带来困难。另外，由于必须由网络管理员维护应用程序的安全数据库，因而给网络维护带来麻烦。
　　(4)在Windows NT基本验证中，用户名和密码只能用于身份验证，而不能作为资源访问权限的凭证。很明显资源访问权限是由管理员分配的，与用户名没有直接关系。
　　针对IIS和Windows NT在安全验证中存在的问题，可以采用ISAPI(Internet Server Application Program Interface)扩展改变IIS缺省的安全验证行为。这种扩展可以保证IIS的安全数据库不依赖于Windows NT的名字库，即可以利用外部系统的口令和用户名实现安全性检查，达到支持应用程序中的第三方安全数据库，支持面向ODBC的安全数据库连接的目的。此外，利用基于角色的系统，使得验证不再针对用户身份，而是针对用户的行为来确定用户的信息范围或适合的功能。
5　验证过滤器的设计与实现
5.1　验证过滤器的性能要求
　　(1)数据存储要求
　　过滤器应该能从外部数据源获取验证的用户名、口令和角色，可以访问ODBC数据存储，支持多线程。
　　(2)执行效率要求
　　设想对每一个资源请求(包括嵌入对象、Applet、ActiveX控件等)，验证过滤器将被激活，这就意味着一个HTML网页会产生若干次的过滤器引用。这就要求验证过滤器具有高性能的执行效率，快速获取并验证用户的凭证。
　　(3)安全性能要求
　　由于ISAPI扩展可以直接访问IIS的数据结构，因此验证过滤器可能会给IIS的安全性带来严重的潜在危险，从而要求实现验证过滤器时必须考虑线程的安全问题。此外，考虑到对多线程数据存储的支持，也要求过滤器支持数据库访问和同步管理。
5.2　过滤器的设计与实现
　　验证过滤器的实现集中在三个类上：
　　(1)CDatabaseManager(数据库管理器)
　　该类负责从ODBC数据库中检索用户安全记录。在实现数据库管理器时，应考虑到线程同步，以确保数据一致性。此外，为快速获得安全记录，应该避免频繁出现ODBC登录，以满足执行效率的要求。该类主要成员函数包括：
　　CDatabaseManager(String ConnectString，Bool useCriticalSection=true)，用于ODBC数据库的连接和对访问基础数据库请求提供类保护；
　　Bool LookUser(String user, CuserSecurityEntry& entry)，用于检索来自安全数据库的用户记录；
　　Void EnterCriticalSection( )以及Void ExitCritical Section( )，这两个函数用来检查用户m_UserCritical Section标识符，以判断是否访问基础数据库，如果是，则使用CCriticalSection对象管理线程同步。
　　私有数据有：
　　Bool m_UserCriticalSection，访问数据库线程同步标志；
　　CUserCacheManage m_UserCache，用户记录缓冲器对象；
　　CDatabase m_Dd，数据库对象；
　　CCriticalSection m_CriticalSection，线程同步对象。
　　(2)CUserCacheManager(缓存管理器)
　　该类负责管理用户安全记录的内存缓存。当众多的用户在较短的时间内同时访问网址时，对安全记录的验证很可能集中在有限几个安全记录的多次验证上(因为一个用户下载网页资源，会连续多次触发过滤器)。因而可以假设，在大多数情况下，缓存操作的用户安全信息请求记录是相似的，从而可以为每一个驻存记录设置延缓时间来确定缓存记录的有效性，以便从缓存中清除过期记录，恢复缓存空间。该类主要成员函数包括：
　　Void AddEntry(Const CUserSecrity& rUser)，用于增加新的安全记录到缓存；
　　Bool LookupEntry(String UserName, CUserSecrity Entry& rEntry)，用于从缓存中检索安全记录并检查该用户安全记录是否到期；
　　Void PurgeCache( )，用于将过期的安全记录移出缓存。
　　(3)CAuthFilter
　　该类为CHTTPFilter的派生类，是过滤器与IIS的接口，其主要成员函数包括：
　　Virtual BOOL GetFilterVersion(PHTTP_FILTER_ VERSION pVer)，用于MFC ISAPI过滤器的初始化和处理请求验证的安全连接和非安全连接；
　　Virtual DWORD OnAuthentication(CHTTPFilter Context * pCtxt, PHTTP_FILTER_AUTHENT Pauthent)，用于完成用户安全身份检查。
　　(4)其它两个附加类 CUserSecurityEntry，用于传递数据库中所定义的关于用户的信息。
　　CCacheEntry，用于封装在缓存管理器中使用的用户安全入口。
6　结束语
　　验证过滤器作为一个动态连接库(DLL)，需将其注册到HKEY_LOCAL_MACHINE\CurrentControlSet Services\W3VC\Parameters\Filter.DLL(验证过滤器名)上。当远程浏览器访问IIS时，IIS装载并启动验证过滤器，使IIS不再使用NT安全验证方法。这样不仅避免了NT域因用户增加造成安全验证性能下降，同时使得IIS支持应用程序第三方安全数据库，降低了NT安全数据库维护工作量，提高了IIS的安全性能。不过，由于过滤器本身并没对安全记录加密，因而还无法实现网址安全保护。进一步考虑，可以引入对验证过滤器动态连接库实施数字签名，通过对验证过滤器加密授权间接实现网址的安全保护。
陈晓苏(华中理工大学计算机科学与技术学院 武汉 430074)
张涛(华中理工大学计算机科学与技术学院 武汉 430074)
肖道举(华中理工大学计算机科学与技术学院 武汉 430074)
参考文献
1 K. Clements and C.Wuestefeld著, 朱玉山, 王晓冬译. ISAPI实用技术指南. 北京：清华大学出版社, 1998
2 Microsoft. IIS and ISAPI Security of MSDN3 Tony Beveridge. ISAPI/NSAPI Web高级编程. 北京：中国水利电力出版社, 1999
收稿日期：1999年9月22日
