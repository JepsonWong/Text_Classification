微型机与应用
MICROCOMPUTER & ITS APPLICATIONS
1999年 第18卷 第2期 Vol.18 No.2 1999



Unix系统中两个与2000年问题
相关的命令及解决方法
李爱国　叶臻杰
　　摘　要：介绍了Unix系统中2个与2000年问题相关的命令，提出了解决的方法，并用C语言对关键模块进行了实现。
　　关键词：Unix系统　2000年问题　GMT时间
1　问题提出
　　Unix系统是一种分时、多任务、多用户的操作系统，目前在许多大型应用领域广为流行，如邮电、金融、税务等。但随着2000年的临近，该系统也存在着一些与2000年相关的“世纪问题”(以下简称Y2K问题)，如常被用来显示或修改系统日期和时间的2个命令asktime和date，2000年后均不能正确地设置系统日期和时间。命令asktime设置系统日期和时间的格式为(［yymmdd］hhmm)，这里yy只接收年份的后2位数字，如输入98时则代表1998年。因Unix系统是以GMT(格林威治时间)1970年1月1日的00：00：00至今所经过的秒数来计时间，所以当yy≤70时，该命令设置的系统时间均为1970年；当70≤yy≤99时，系统对应的时间为1970～1999年，通过上述分析，命令asktime根本不能正确地设置1999年后的日期。虽然命令date能将日期设置成2000年后，但存在误差，因为date命令无法正确判断2000年是否为润年，如想把系统时间设置成2000年7月27日11时25分，用命令“date 0727112500”，系统日期却为2000年7月28日11时25分。由此可见，Unix系统中的某些命令也存在着“Y2K问题”。
2　解决方法
　　为了解决Unix系统中某些命令的“Y2K问题”，方法有2种：其一对相关的命令进行修改；其二重写相关命令。由于一般人手头无相关命令的源码，所以重写相关命令更容易。笔者对asktime命令进行了重写，较好地解决了该命令的“Y2K问题”。
　　1.程序设计思想
　　Unix系统提供了几个设置系统时间的库例行程序，如settime(&newtime)，其中newtime定义成长整形，我们只要把1970年1月1日00：00：00至今所经过的秒数计算出来赋给newtime，再调用该函数，系统将会把日期和时间设置成现在的日期和时间。所以程序设计的关键是计算newtime的值，它涉及润年润月的判断问题。
　　2.程序实现
　　程序实现的关键是计算newtime的值，而求newtime值的关键又是计算待设置日期与1970年1月1日相减所得的实际天数，下面就以求实际天数为例简要介绍程序的实现方法。首先将参数说明如下：
　　(1)入口参数：qrq-yy、qrq-mm、qrq-dd分别为起始日期的年、月、日；zrq-yy、zrq-mm、zrq-dd分别为终止日期的年、月、日。
　　(2)出口参数：compute-ts为起始日期与终止日期之间的天数。
int computets(int qrqyy,int qrqmm,int qrqdd,int zrqyy,int zrqmm,int zrqdd)
{
　char yn［1］,bz［1］;
　int ys,rq1,sjts;
　if((qrqyy<zrqyy)‖((qrqyy==zrqyy)&&(qrqmm<zrqmm))‖((qrqyy==zrqyy)&&(qrqmm==zrqmm)
　　　&&(qrqdd<zrqdd))‖((qrqyy==zrqyy)&&(qrqmm==zrqmm)&&(qrqdd==zrqdd)))
　　sjts=1;　/*若终止日期大于起始日期则sjts=1,否则sjts=0*/
　else
　　sjts=0;
　strcpy(yn,“”)；
　do{
　　++qrqdd;
　　if(qrqdd>28)
　　　{
　　　　switch(qrqmm){
　　　　　case 1:　/*月份为1、3、5、7、8、10、12且当起始日期的天>31时*/
　　　　　case 3:　/*把起始日期的天减去31，月份加1，并判断月份是否大于12*/
　　　　　case 5:　/*若大于12，则月份减去12，年份加1*/
　　　　　case 7:
　　　　　case 8:
　　　　　case 10:
　　　　　case 12:
　　　　　　if(qrqdd>31)
{
　　　　　　　qrqdd-=31;
　　　　　　　qrqmm+=1;
　　　　　　　if(qrqmm>12)
{
　　　　　　　　qrqmm-=12;
　　　　　　　　qrqyy+=1;
　　　　　　　　}
　　　　　　}
　　　　　　break;
　　　　　case 4:　/*月份为4、5、6则判断起始日期的天数是否大于30*/
　　　　　case 6:
　　　　　case 9:
　　　　　case 11:
　　　　　　if(qrqdd>30)
{
　　　　　　　qrqdd-=30;
　　　　　　　qrqmm+=1;
　　　　　　　if(qrqmm>12)
{
　　　　　　　　qrqmm-=12;
　　　　　　　　qrqyy+=1;
　　　　　　　　}
　　　　　　}
　　　　　　break;
　　　　　case 2:　/*月份为2，且为润年则判断起始日期的天数是否大于29，否则看是否大于28*/
　　　　　　if((((qrqyy%4)==0)&&((qrqyy%100)==0)&&((qrqyy%400)==0))‖(((qrqyy%4)==0)&&((qrqyy%100)!=0)))
　　　　　　　strcpy(bz,“1”)；
　　　　　　else
　　　　　　　strcpy(bz,“0”)；
　　　　　　if((strcmp(bz,“1”)==&&(qrqdd>29))
　　　　　　{ qrqdd-=29;
qrqmm+=1;
　　　　　　　if(qrqmm>12)
　　　　　　　{ qrqmm-=12;
qrqyy+=1;
　　　　　　　}
　　　　　　}
　　　　　　if((strcmp(bz,“0”)==&&(qrqdd>28))
　　　　　　{ qrqdd-=28;
qrqmm+=1;
　　　　　　　if(qrqmm>12)
　　　　　　　{ qrqmm-=12;
qrqyy+=1;
　　　　　　　}
　　　　　　}
　　　　　break;
　　}
}
　　　　if((qrqyy<zrqyy)‖((qrqyy==zrqyy)&&(qrqmm<zrqmm))‖((qrqyy==zrqyy)&&(qrqmm==zrqmm)&&(qrqdd<=zrqdd)))
　　　　　sjts+=1;　/*若起始日期不大于终止日期则变量sjts加1*/
　　　　else
　　　　　strcpy(yn,“-”)；　/*若起始日期大于终止日期则将“-”赋给变量yn*/
　　}while(strcmp(yn,“”)==0);　/*若变量yn的值为“-”则结束循环*/
　　retrun(sjts-1)　/*返回实际天数(sjts-1)*/
}
3　几点说明
　　1.可以采用相同的方法对命令date进行重写。
　　2.因存储日历时间的计数器为31位，在2038年1月19日3时14分以前有足够的空间存储日历时间，但该时间以后，计数器溢出，不能用上述方法正确设置系统时间。
　　3.newtime的值是GMT 1970年1月1日0时0分0秒以来的秒数，注意北京时间与GMT时间相差8个时区。
　　4.对于“Y2K问题”，SCO公司推出了2张补丁盘UOD426B/XNX427E，分别用于解决Unix/Xenix操作系统的“Y2K问题”。对于这2张补丁盘，我们既可以向软件提供商索取，也可以通过internet下载(网址为：WWW.SCO.COM)。 
作者单位：农业银行常德市分行科技电脑部(415000)
参考文献
1　钱培德.Unix系统程序设计技术.北京：北京科海高技术公司培训中心
2　杨华中.Unix应用教程.北京：人民邮电出版社
(收稿日期：1998-08-24)
