计算机工程
COMPUTER ENGINEERING
1999年 第25卷 第12期 vol.25 No.12 1999



QoS路由器关键技术分析
陈依群　铁　玲　顾尚杰　诸鸿文
　　随着因特网作为信息基础设施迅速发展，路由器特别是骨干网路由器的设计和实现主要面临着两个挑战：一是网络用户增加及多媒体应用的出现，对网络带宽提出更高要求，链路和路由器需拥有更高带宽；二是网络用户和应用的要求提供不同的服务质量，路由器应具备区别服务(包括IETF定义的IntServ和DiffServ 两种服务)的机制。
　　同时支持高带宽和区别服务，使路由器(简称QoS路由器)设计和实现更为复杂。高带宽要求路由器快速地处理和转发每个数据包，也就要求路由器内部处理尽可能简单；而区别服务需要在路由器内部保持更多的连接状态信息，以便按连接或一组连接分类识别数据包和分配网络资源，这使数据包处理和转发更为复杂。为解决这一矛盾，同传统Best-effort路由器相比，QoS路由器需要在体系结构和资源管理等方面进行改进，主要特点是利用交换技术和并行处理技术来提高路由器的性能。 
1 QoS路由器体系结构
1.1 路由器的物理组成
　　一个通用的路由器结构如图1所示。它由4部分组成：输入端口、交换结构、路由处理器和输出端口。输入端口与输入链路相连，执行物理层和链路层功能，接收数据包，根据IP地址查找路由表确定数据包的输出端口和下一段地址。输出端口与输出链路连接，也执行物理层和链路层功能，存储和发送数据包。路由处理器运行路由协议维护路由表和执行网络管理功能。交换结构连接输入端口、输出端口和路由处理器，以便把输入端口的数据包交换到一个或多个输出端口或者路由处理器。 


图1 路由器组成
1.2 QoS路由器的逻辑组成
　　QoS路由器逻辑组成如图2所示，其中实线和虚线分别表示数据包转发路径和控制路径。在转发路径上，QoS路由器除了执行路由表查找、从输入端口到输出端口交换数据包外，还执行数据包分类，并采用复杂的调度和缓冲管理方法给网络连接分配资源。

图2 比较Best Effort路上器和QoS路由器
　　在控制路径上，QoS路由器除了维护路由表和执行网络管理功能外，还运行RSVP信令协议和执行接入控制[1]。RSVP协议和接入控制用于给网络连接保留资源，在转发路径上设置用于控制资源分配的状态信息，如区别服务类型、优先级等。 
2 QoS路由器的关键技术
　　提高QoS路由器性能的关键在于提高转发路径性能，即提高构成转发路径的各路由器机制，包括交换结构、数据包分类、路由表查找和资源管理的带宽。
2.1 交换结构
　　交换结构是路由器的核心，有总线、共享内存和交叉开关3种类型。总线结构是指路由器的各输入端口和输出端口都同总线相连，其结构简单，便于实现。但总线结构限制了输入和输出端口间每次只允许交换一个数据包，同时总线仲裁结构实现复杂，从而限制总线带宽提高。因而总线结构只适用于访问路由器或企业路由器。
　　共享内存结构的路由器把接收的数据包存储在共享内存，端口间只需交换数据包指针而无需拷贝整个数据包，可有效提高交换结构带宽利用率。但存储器存取速度受限制，也限制路由器带宽。
　　交叉开关在N个输入端口和N个输出端口间建立N条共享总线。输入和输出端口通过并发交换多个数据包而提高带宽。但一般的交叉开关存在的一个问题是，输入端口HOL阻塞使带宽利用率低。一个解决方法是内部加速，使交叉开关的内部带宽大于输入链路带宽总和，输出端口同时接收多个输入端口的数据包。这种输出排队方式优点是数据包只存在输出排队时延，但缺点是扩展性较差。另一个解决方法是输入虚拟排队。交叉开关在每个输入端口对应于一个输出端口维持一个FIFO队列。模拟结果和解析方法已证明这种方式可获取100%吞吐量，并且只需内部加速比为2，可获得同内部加速比N相似的吞吐量，因而是可扩展的。交叉开关另一个问题是采用可变长度交换或固定长度交换。采用可变长度交换能提高带宽利用率，变长交换控制逻辑十分复杂，因此理想的是采用固定长度交换。路由器需把可变长度的IP数据包划分定长信元交换，并采用标记技术，把信元交换到输出端口，并在输出端重组IP数据包。
2.2 IP数据包处理
　　IP数据包处理包括数据包分类、路由表查找和一般性处理，如报头校验、修改报头、IP地址验证、IP选项处理等。其中，路由表查找和数据包分类最为复杂。
　　(1)路由表查找算法 Internet采用CIDR(Classless Inter-Domain Routing)地址结构。路由器接收到每个数据包，需查找具有最长掩码(或最长匹配前缀)的路由表项，把数据包转发到路由表项指定的输出端口。查找最长匹配前缀使用传统的完全匹配方法，如完全哈希链表、二进制查找、标准相联存储器不能直接应用于路由表查找。另外，一个路由表，一般存在数千个甚至上万个路由表项，若同时数据包长度很短，都使路由表查找实现变得困难。路由表查找是影响路由器带宽的一个主要因素。
　　最近，已提出多种可有效改进路由查找性能的算法，这些改进算法可分为：(1)硬件方法；(2)压缩方法；(3)哈希表方法。传统的硬件方法是使用联想存储器(Content Addressable Memories)和高速缓冲(Cache)存储路由表。这两种方法扩展性差，而不适用于支持大路由表的高性能路由器。一种改进方法是把逻辑电路和存储器组合在一起，使存储器智能化，可以极大地提高存储器访问速度。另一种改进方法是利用大存储空间存储器存储整个路由表，并采用专用硬件修改路由表方法克服路由表修改困难的缺点。
　　压缩技术是利用路由表稀疏特性构造一个复杂和紧凑的路由表，以便能把整个路由表存放在路由处理器的一级高速缓冲内，这样可实现高速路由表查找。
　　一种改进哈希表方法是对于一个给定IP地址，循环地选取不同的前缀表达式，分别求哈希表值。但这种方法扩展性差。另一种可扩展哈希表查找算法是对于一个N位地址，只需用O(logN)时间查找最长前缀匹配。这种算法为每个可能的最长前缀匹配计算一个独立的哈希表，根据前缀表达长度使用二进制查找算法而不是从可能最长前缀表达式开始查找。另外，该算法需要为每个哈希表项存储内部标记，当哈希表查找失败时，指向另一个短缀表达式的哈希表。一个路由表项内部标号用压缩方式存储保存有效减少标记项存储空间要求。最后，预先用一个16前缀表达式预先求出一个包括所有路由表项哈希表，可以快速改变哈希表，可进一步减少平均存储时间为2。
　　(2)数据包分类算法 数据包分类是支持区别服务的一个重要机制。QoS路由器识别由一个连接或一组连接发送的数据包，以便分配所需要的网络资源以满足用户的区别服务要求。按连接分类数据包，QoS路由器不但需要根据每个数据包的IP目的地址，而且还根据源地址，甚至更复杂但也更灵活的，是按协议类型、服务类型和TCP/UDP端口号在过滤库检索一个最佳匹配规则来分类数据包。IPv4的源、目的地址长度之和为64位，若加上协议类型、服务类型和TCP/UDP端口号字段，其长度之和为104位。而骨干路由器的过滤库一般含有大量的分类规则(如1k～10k)，在这种情况下，要实现快速数据包分类比实现快速路由表查找更为困难。已提出的一些快速路由表查找算法能实现按线速查找32位地址，但这些算法并不能被轻易修改而适用于快速数据包分类。
　　最近，已提出数据包分类的一些快速实现方法。一种是针对QoS路由器通常按目的、源IP地址分类数据包的情况，提出了一种grid-of-tries的优化算法；同时还针对按目的、源地址和端口号等多维空间中分类数据包的情况，提出了一种cross-producting算法，这两种算法最多需要8次存储器访问和11次存储访问。另一种是基于硬件的并行分类方法实现。该方法把路由器按目的、源地址和端口号等分类数据包一般化为多维空间检索问题，采用分解方法把多维空间检索简化为多个条件表达式求解，再求各表达式交集。
　　按连接分类实现区别服务，非常灵活，但对于骨干路由器而言，实现按连接分类非常困难，其扩展性差。因此，在灵活性和扩展性间折衷，骨干路由器用聚合的方法实现区分服务。对于每个到达数据包，路由器只需按区别服务域分类，易于高速实现。
　　(3)分布或集中处理 路由器可采用硬件方法，即通过提高IP 处理器的性能来增加IP处理带宽。相应地，处理结构可划分为集中和分布式两种。集中式结构是采用一个高性能转发器，所有转发功能都在一个中心处理器执行。
　　分布式结构是采用一些低性能处理器，利用并行处理技术提高IP处理带宽。同集中式结构相比，分布式结构扩展性好，但控制更加复杂。首先，路由器必须采用均衡机制使各个处理器具有类似负荷以防止出现数据包在一些处理器前排队而另一些处理器空闲等待现象。其次，路由器必须维持全局一致路由表。为更好解决这两个问题，可采用一种功能专用化的分布式结构。路由器把整个IP处理过程分成为多个执行特定功能阶段，每个IP处理器只执行一个专门任务，数据包从一个处理单元流向另一个处理单元。这样，可简化各处理单元设计，但同时使处理器间通信开销增加。
　　(4) 标号交换技术 提高路由器IP处理性能另一种方法是路由器采用标号交换技术。标号交换不同于传统基于路由交换方法，其基本思想是路由器给一个连接的数据包分配一个标号，下一段路由器根据数据包标号用完全匹配方式转发和调度从第二个开始的数据包，这样简化了路由表查找和数据包分类问题，便于路由器利用ATM交换技术提高数据包转发速度。但标号交换技术要求路由器实现标号发布协议，这将重大改变当前的Internet结构；另外，使路由器具有的链路容错能力相对降低。
2.3 资源管理
　　路由器资源管理包括输出链路带宽及缓冲空间管理。前面讨论的数据包分类算法把每个数据包按一个连接或一组连接分类，数据包调度和缓冲管理算法则给一个连接或一组连接分配链路带宽和缓冲，以满足各连接的服务质量要求。
2.3.1 调度算法
　　调度算法确定各排队数据包在路由器输出端口的发送顺序。调度算法包括先来先服务传统、优先级服务，以及复杂的加权公平排队和分层链路共享算法。先来先服务调度算法，实现简单，但先来先服务缺点是不能控制分配网络带宽，不能保证一些连接比别的连接具有更小的端到端时延，以及防止一些恶意连接不断发送数据包使别的连接不能公平地使用网络资源。
　　加权公平排队算法是一种理想的调度算法。它根据每个连接权值分配链路带宽。设各连接权值可表示为w1, w2,…,wn，其中Σwi=1，则排队连接k具有可保证带宽wk*R/Σwi，R为链路带宽。因此，加权公平排队算法可保护和隔离连接，公平分配剩余带宽，并且若连接发送速率受限于漏桶控制算法，则该连接具有一个可保证的端到端时延上限。但加权公平排队算法缺点是需要保存每个排队连接状态信息，各数据包需求虚拟时钟并且按优先级排队，其扩展性差。
　　分层链路共享服务是指按类层次组织一个链路的所有连接，路由器基于策略地给每个类对象分配链路带宽。分层链路共享需要实现以下几个目标：若一个类有足够带宽需求，应保证该类的最小网络带宽；若一个类具有剩余带宽，应保证各兄弟类公平使用这些剩余带宽；在类层次内，支持实时和优先级服务。对于以上这些目标，有时可能是冲突的，调度算法应实现相应机制优先满足某些目标要求。用于分层链路共享服务的调度算法主要包括基于类排队(Class Based Queueing)[4]，分层加权公平排队算法(Hierarchical Packet Fair Queueing)和分层服务曲线算法(Hierarchical Fair Service Curve)。其中，分层服务曲线算法具有时延和带宽解耦特点，可更有效利用带宽资源。
2.3.2 缓冲管理
　　缓冲管理给各连接分配缓冲和缓冲溢出时如何丢弃数据包。同调度算法相比，缓冲管理算法由于只需根据固定状态信息，特别是一些全局状态信息，或一些特定连接状态信息来决定接收或丢弃数据包，而便于高速实现。
　　缓冲管理算法主要包括尾部丢弃、随机提前检测(Random Early Detection)[5]及改进算法。传统路由器一般采用尾部丢弃算法。尾部丢弃算法是在缓冲溢出时丢弃数据包。它简单实用，但存在两个主要问题：一个是不公平占用缓冲，单个或少数TCP连接可能占用大量缓冲，阻止别的连接公平使用网络资源；另一个是过度占用缓冲，路由器在缓冲溢出时易丢弃大量突发IP包，使一些TCP连接同步减少发送窗口，降低链路利用率。
　　RED算法是一种主动排队管理算法。和尾部丢弃算法不同，RED路由器在缓冲溢出前随机丢弃数据包或设置显式拥塞指示，提前通知各TCP连接降低数据包发送速率。它使用指数加权移动平均低通滤波器计算平均队列长度。路由器把平均队列长度和两个高、低门限比较。当平均队列长度小于低门限时，路由器不丢弃任何数据包或在数据包报头设置拥塞标识。当平均队列长度大于高门限时，路由器在每个数据包报头设置拥塞标号。若平均队列长度在高、低门限之间，路由器以概率pa在每个新到达IP包报头设置拥塞标识。pa是平均队列长度变量函数。这样，RED路由器可维持一个相对短的平均排队长度，可减少数据包排队时延；同时按各连接数据包到达速率成比例的随机丢弃数据包，可保证一定的公平性和防止所有连接同步地降低吞吐量。
　　RED改进算法包括FRED(Flow Random Early Detection)和RIO(Red with In/Out)。FRED同RED算法相比，可更好地保证TCP连接公平使用带宽，但FRED需要按连接分类数据包；RIO算法则把RED算法应用于数据包具有不同丢弃优先级情况，其基本思想是当路由器检测拥塞时高概率地丢弃低优先级数据包，可实现一种低代价区别服务机制。
3 结论
　　本文讨论了QoS路由器基本结构，概述了路由器内部机制，包括交换结构、数据包分类、数据包调度和缓冲管理的实现算法。这些实现方法一种情况是如WFQ，具有很好的灵活性，能满足区别服务要求，但扩展性较差或实现复杂性高；但另一种情况是如RIO算法，具有很好的扩展性和低的实现复杂度，但支持区别服务灵活性稍差；如何改进或结合这些算法以同时满足灵活性、可扩展性和实现复杂性要求，还需要进一步研究。
作者单位：上海交通大学电子工程,上海200030
参考文献
1 Clark D D,Shenker S,Zhang L.Supporting Real-time Applications in an Integrated Services Packet Network:Architecture and Mechanism.SIGCOMM'92,1992-08： 14-16
2 Degermark M,Brodnik A,Carlsson S et al.Small Forwarding Tables for Fast Routing Lookups.SIGCOMM'97,1997：3-14
3 Srinivasan V,Varghese G,Suri S et al.Fast and Scalable Layer Four Switching.SIGCOMM'98,1998-08-31：191-202 
4 Floyd S.Jacobson V.Linking-sharing and Resource Management Models for Packet Networks.IEEE/ACM Transactions on Networking,1995,3(4)：1240
5 Floyd S,Jacobson V.Random Early Detection Gateways for Congestion Avoidance.IEEE/ACM Transactions on Networking, 1993，1(4)：127
