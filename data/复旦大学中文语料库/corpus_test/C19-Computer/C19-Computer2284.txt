计算机应用研究
APPLICATION RESEARCH OF COMPUTERS
2000　Vol.17　No.5　P.87-89



基于Web的企业内部质量审核系统设计与实现
武庄　刘友丹
摘  要  通过对基于Web的企业内部质量审核系统的设计和实现，研究基于Web的应用系统开发中的系统分析方法、实现环境和开发工具等。
关键词  Web  客户/服务器模型  质量审核
1  引言
　　对已经或正准备通过ISO9000质量体系认证的企业来说，内部质量体系审核已成为企业日常管理工作的一个重要组成部分。内部质量体系审核工作的特点是信息量大，参与审核的人员多，对审核结果的记录、跟踪与管理的要求较高，并且按照ISO9000标准的要求，内部质量体系审核工作每年都要覆盖ISO9000的所有要素和企业的所有部门，因此我们开发了企业内部质量审核系统单机版。根据用户反馈信息得知，审核计划、审核结果依靠磁盘导入导出，易引起数据丢失(尤其是跨地区企业)；计划的制定和执行异地进行，易引起数据的不一致；审核管理者、审核员共享审核信息困难。
　　Internet/Intranet的飞速发展给计算机信息系统的开发带来了深刻的变化，Intranet就是在传统的企业局域网基础上采用Internet技术，以TCP/IP协议作为基础，以Web为核心应用，构成统一和便利的信息交换平台。基于Web计算和网络技术的信息系统建立和维护方便，容易扩展和保证数据的一致性，能很好地满足企业内部质量审核的要求。鉴于已经或正准备通过体系认证的企业的硬件设施较好，绝大部分企业已经按照Internet模式建立了内部网络，因此我们对企业内部质量审核系统进行重新分析设计，将企业内部质量审核系统单机版改造成基于Web的企业内部质量审核系统。
2  基于Web的计算模型
　　随着应用的复杂化，C/S计算模型已从客户/服务器两层模型进化为客户/应用服务器/数据库服务器三层模型。对于三层C/S模型，如果用Web浏览器取代专门的客户界面，Web服务器作为标准的应用服务器，原来的应用逻辑以Web应用的形式存在，开放式协议和标准(如HTTP，HTML，CGI等)取代专用的协议，这就建立了以平台独立化和开放标准化为特征的基于Web的计算模型，如图1所示。

图1基于Web的计算模型
　　在图1中，Web浏览器负责接收用户数据，进行数据合法性检验和初步处理，远程调用Web服务器上的应用逻辑，显示输出结果；Web服务器负责接收和响应Web客户的请求，进行复杂的商业规则检查，向数据库服务器发送动态SQL或调用存储过程，将查询结果转化为HTML代码；数据库服务器负责执行Web服务器送来的动态SQL语句，执行存储过程，通过触发器保证数据的完整性，向Web服务器发送SQL语句运行结果。
　　由此可见，采用基于Web的计算模型具有如下优点：(1)由于Web浏览器和Web服务器的平台独立性，增强了程序的可移植性；(2)应用Web体系和开放协议标准，增强了系统的互操作性；(3)所有维护工作均集中在服务器端，增强了系统的可维护性和数据的一致性；(4)能够增加服务器端应用和相应的中间层接口软件，增强了系统的可扩展性。
　　我们开发的企业内部质量审核系统(QEAUDIT)就是采用基于Web计算模型的联机事务处理系统。管理者可以通过浏览器访问远端的数据库服务器，对企业信息(一般信息、组织机构、体系文件、审核员等)进行增删改、定制检查单、职能分配、制定审核计划(年度计划、单次计划)等；审核员可以通过浏览器对计划单元执行审核、查询计划和审核信息(检查单、纠正措施报告、不符合项等)。下面我们就对基于Web的QEAUDIT系统设计与实现作较系统的论述。
3  基于Web的QEAUDIT系统设计
　　与基于Web计算模型的三层模型相对应，QEAUDIT系统也分为表示层、处理层和数据层这三层，分别有界面对象、控制对象和实体对象组成。其中，界面对象是系统和使用者之间的接口；控制对象用于协调和管理界面对象和实体对象之间的通信，它可使其它对象紧密结合起来，对外呈现一个子系统；实体对象的全体构成数据库。界面对象必须通过控制对象才能访问实体对象，具体地说，要通过Web页面访问数据库，必须通过远程调用Web服务器上的应用逻辑。所以，Web页面与应用逻辑之间是远程调用的关系，Web页面间则是一种超链接的关系，这与传统应用系统模块间的过程调用关系有很大区别。因此，设计基于Web计算模型的应用系统的主要工作是设计一系列的Web页面和应用逻辑，即界面对象和控制对象，以及Web页面和应用逻辑之间的RPC关系和Web页面间的超链接关系。
　　我们在分析和设计QEAUDIT系统时，仍沿用传统的结构化分析方法。在需求分析阶段采用数据流图DFD和数据字典DD作为主要工具，这是考虑到数据流图描述的是系统的逻辑模型，而与物理体系结构无关。在总体设计阶段，我们根据基于Web计算模型的特点对传统的面向数据流的设计方法加以改进，并利用改进后的方法把数据流图映射为软件结构。下面对QEAUDIT系统设计过程中的关键步骤说明如下：
　　(1)设计QEAUDIT系统的DFD和DD，其部分DFD如图2所示。

图2QEAUDIT系统DFO
　　(2)识别使用系统的角色，并为每个角色安排一个用户界面对象，具体表现为一组Web页面。一般每个数据源点对应一个角色。QEAUDIT系统的角色主要是“管理者”和“审核员”，为此我们安排了管理者界面和审核员界面。
　　(3)把各层DFD分别映射为系统的软件结构图。数据存储的编号不变，软件结构图中的角色编号与DFD中相应的数据源编号相同。页面对象、控制对象和子系统模块分别用PG、CN和SB标识，其它编号规则和DFD编号规则相同。图2中的DFD所对应的软件结构图如图3所示。图中所示的软件结构图呈现三层结构，与基于Web方式计算模型的三层模式一致。

图3　QEAUDIT系统的软件结构图
　　(4)由软件结构图可以描述各个界面对象和控制对象的输入、输出和要执行的操作。这些描述是详细设计的主要依据。由数据流图映射得到的系统的结构可以看出各个角色分别能进入哪些子系统、能访问哪些页面，这些可作为设计安全措施的依据。
　　(5)识别数据流图中的数据存储，进行数据库设计，并对关系表进行规范化以达到3NF。QEAUDIT系统有管理者表、审核员表、年度计划表、单次计划表、检查单表等。
　　至于软件生命周期的其它阶段，基本上和结构化分析方法一致，在此不再叙述。
4  QEAUDIT系统的实现环境
4.1  Web数据库访问技术
　　Internet应用已经从最初的静态页面发布发展到丰富的动态交互页面，而访问Web数据库则是通过动态交互技术来实现的。最初的动态交互是通过CGI(通用网关接口)来实现的，但CGI程序每次响应均要启动一个进程，效率较低。后来出现了多线程编程接口，如Microsoft的ISAPI和Netscape的NSAPI技术，以及需要下载到客户端浏览器执行的Java Applet、ActiveX和Plug-in(浏览器插件)。表1是这几种技术的比较。
表1  Web数据库访问技术比较

　实现方式运行方式效率主要支持的 Web Server
CGIPerl等服务器
脚本C语言等多进程
单线程低Microsoft IIS
Netscape Web Server
WebSite
ISAPI NSAPIC语言等单进程
多线程
驻留内存高Microsoft IIS
Netscape Web Server
Java Applet
ActiveX Plug-inJava C语言等单进程多线程高Microsoft IIS
Netscape Web Server

　　选用Web数据库访问技术应主要考虑三方面因素：(1)能否保证Web服务器的高性能；(2)Web服务器端代码是否具有可移植性；(3)客户端除了浏览器外，是否需要其它软件。由于QEAUDIT系统是基于Intranet的，服务器端代码基本上不需要移动，而且应用编程接口方法能保证服务器的高性能，因此，我们在设计QEAUDIT系统时就采用了应用编程接口的方法。
4.2  客户端
　　在客户端，目前最流行的浏览器为Internet Explorer和Netscape,它们均支持扩展的HTML标准，支持Javascript和Java Applet。标准HTML可以提供数据输入输出界面。在QEAUDIT系统中，我们使用Javascript作数据合法性检验和初步处理；Javascript还能加强页面的动态性，如用户输入非法数据时弹出提示窗口，用户按下删除记录时弹出确认窗口。使用Java可以弥补应用编程接口方法的一些缺陷。如要用折线图显示企业内部质量审核的历史情况，可以设计一个嵌在HTML中画折线图的Java Applet，程序中设一个存放作图数据的参数区。当控制对象统计出各次审核的统计数据后，将数据填入参数区，然后将Applet程序传回客户端运行。
4.3  Web服务器端
　　在Web服务器端，我们采用NT4.0中文版作为操作系统，Microsoft IIS3.0作为WWW服务软件，它提供了IDC(Internet直接数据连接)和ASP接口作为IIS到SQL Server的接口。控制对象分两类：处理客户请求和向数据库服务器发送动态SQL的控制对象，将数据库查询结果转换为HTML代码的控制对象。对于第一种控制对象，IDC方法实际上设计一系列送往SQL Server的Transact-SQL语句，缺乏在Web服务器端执行的代码，不具备复杂的商业规则检查能力；ASP方法则是设计一系列嵌在ASP文件中的类VB代码，这些代码既可以通过ODBC建立与SQL Server连接，又可以执行复杂的商业规则检查，这是一种较好的选择。对于第二种控制对象，这两种方法都采用扩展HTML模板文件的方法，在HTML代码中加入控制语句，控制数据库查询结果转化为按一定格式显示的标准HTML代码。
4.4  数据库服务器端
　　在数据库服务器端，我们配置了NT4.0中文版、SQL Server 6.5和ODBC2.5。这里主要的开发工作是设计通用的存储过程、触发器和完整性检查规则。使用存储过程可提高服务器性能，减轻网络压力，增强数据的安全性和完整性。但在QEAUDIT系统中，对于各个表的INSERT、DELETE和UPDATE操作设计通用存储过程；而SELECT操作使用频率高，且查询条件各异，难以设计通用的存储过程，一般用动态SQL语句实现。
4.5  安全措施
　　为QEAUDIT系统配置必要的安全措施十分关键。应用系统的安全机制一般分为网络级、操作系统级和应用程序级三个层次。根据QEAUDIT系统实现环境，我们一方面采用操作系统的安全机制，对于Web服务器上的Web页面和应用逻辑代码，用NT的NTFS文件系统分配这些文件的权限，并设置用户帐号和密码，任何进入QEAUDIT系统均要核查帐号和密码；另一方面通过应用程序加以控制，例如对于进入该系统的合法审核员，限制该审核员只能存取所在部门的审核计划和审核结果等。 
5  结束语
　　本文对基于Web的企业内部质量审核系统的分析和设计、实现环境和开发工具进行了详细的论述,对其它基于Web的应用系统开发具有借鉴意义。使用基于Web计算模型开发的事务处理系统逻辑结构清晰，分工明确，运行效率较高，为客户/服务器应用提供了新的开发途径。
武庄(北京航空航天大学  北京 100083)
刘友丹(北京中航科创质量技术开发中心  北京 100028)
参考文献
1，M.斯旺克, D.基特尔. World Wide Web数据库开发人员指南. 北京:机械工业出版社, 1998
2，Ron Soukup. Microsoft Sql Server 6.5技术内幕. 北京: 清华大学出版社, 1999
3，万  健. 数据库Web发布技术及Internet信息咨询系统的设计. 计算机应用研究, 1998, 4:25～29
4，姚卿达, 李子坚. 基于网络中心计算模型的应用系统开发方法. 计算机科学, 1998, 10:61～64
收稿日期：1999-9-15
